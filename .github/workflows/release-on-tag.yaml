name: release-on-tag

on:
  push:
    tags:
      - '*'

permissions: { contents: read }

env:
  PACKAGE_NAME: asf-example

jobs:
  linux:
    name: ${{ matrix.name }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - { name: manylinux-amd64,   image: quay.io/pypa/manylinux_2_28_x86_64,  runs_on: ubuntu-22.04 }
          - { name: manylinux-aarch64, image: quay.io/pypa/manylinux_2_28_aarch64, runs_on: ubuntu-22.04-arm }
          - { name: musllinux-amd64,   image: quay.io/pypa/musllinux_1_2_x86_64,   runs_on: ubuntu-22.04 }
          - { name: musllinux-aarch64, image: quay.io/pypa/musllinux_1_2_aarch64,  runs_on: ubuntu-22.04-arm }
    runs-on: ${{ matrix.runs_on }}
    steps:
      - name: Checkout (shallow, no persisted credentials)
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          fetch-depth: 1
          persist-credentials: false
      - name: Build dists with uv inside ${{ matrix.image }}
        run: |
          docker run --rm \
            -v "$GITHUB_WORKSPACE:/work" -w /work \
            ${{ matrix.image }} \
            sh -lc 'uv build --sdist --wheel'
      - name: Upload dists artifact (${{ matrix.name }})
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: ${{ matrix.name }}
          path: dist/*

  macos-aarch64:
    name: macos-aarch64
    runs-on: macos-14
    strategy:
      fail-fast: false
    steps:
      - name: Checkout (shallow, no persisted credentials)
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          fetch-depth: 1
          persist-credentials: false
      - name: Setup uv
        uses: astral-sh/setup-uv@e92bafb6253dcd438e0484186d7669ea7a8ca1cc # v6.4.3
      - name: Build dists with uv (sdist+wheel)
        run: uv build --sdist --wheel
      - name: Upload dists artifact (macos-aarch64)
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: macos-aarch64
          path: dist/*

  # Development releases
  publish-testpypi:
    needs: [linux, macos-aarch64]
    runs-on: ubuntu-22.04
    if: contains(github.ref_name, '-dev')
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Download all artifacts into dist/
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          merge-multiple: true
          path: dist
      - name: Create GitHub prerelease for ${GITHUB_REF_NAME}
        env:
            GITHUB_TOKEN: ${{ github.token }}
        run: |
          gh release create "${GITHUB_REF_NAME}" dist/* \
          --prerelease --notes "Dev release ${GITHUB_REF_NAME}"
      - name: Publish to TestPyPI (Trusted Publisher)
        uses: pypa/gh-action-pypi-publish@76f52bc884231f62b9a034ebfe128415bbaabdfc # v1.12.4
        with:
          repository-url: https://test.pypi.org/legacy/
          packages-dir: dist/
          skip-existing: true

  # Production releases
  publish-pypi:
    needs: [linux, macos-aarch64]
    runs-on: ubuntu-22.04
    if: ${{ !contains(github.ref_name, '-dev') }}
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Download all artifacts into dist/
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          merge-multiple: true
          path: dist
      - name: Create GitHub Release for ${GITHUB_REF_NAME}
        env:
            GITHUB_TOKEN: ${{ github.token }}
        run: |
          gh release create "${GITHUB_REF_NAME}" dist/* \
          --notes "Release ${GITHUB_REF_NAME}"
      - name: Publish to PyPI (Trusted Publisher)
        uses: pypa/gh-action-pypi-publish@76f52bc884231f62b9a034ebfe128415bbaabdfc # v1.12.4
        with:
          packages-dir: dist/
